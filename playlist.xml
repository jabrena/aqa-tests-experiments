<?xml version='1.0' encoding='UTF-8'?>
<!--
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
-->
<playlist xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../../TKG/playlist.xsd">
	<test>
		<testCaseName>jcstress_BooleanFencedTest</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t BooleanFencedTest$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_IntFencedTest</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t IntFencedTest$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_ByteFencedTest</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t ByteFencedTest$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_FloatFencedTest</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t FloatFencedTest$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_LongFencedTest</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t LongFencedTest$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_DoubleFencedTest</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t DoubleFencedTest$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_ShortFencedTest</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t ShortFencedTest$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_CharFencedTest</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t CharFencedTest$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_SyncBarrier2Test</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t SyncBarrier2Test$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_SyncBarrier3Test</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t SyncBarrier3Test$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_SyncBarrier1Test</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t SyncBarrier1Test$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_SyncBarrier0Test</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t SyncBarrier0Test$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_ReentrantRWLockMutexTests</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t ReentrantRWLockMutexTests$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_SynchronizedMutexPoolTest</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t SynchronizedMutexPoolTest$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_ReentrantLockMutexTests</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t ReentrantLockMutexTests$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_SynchronizedMutexTest</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t SynchronizedMutexTest$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_StampedLockPairwiseTests</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t StampedLockPairwiseTests$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_StampedLockTransitionTests</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t StampedLockTransitionTests$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_ThreadMXBeanAlloc</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t ThreadMXBeanAlloc$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_UnfencedReadTwiceTest</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t UnfencedReadTwiceTest$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_FencedDekkerTest</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t FencedDekkerTest$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_FencedAcquireReleaseTest</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t FencedAcquireReleaseTest$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_UnfencedDekkerTest</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t UnfencedDekkerTest$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_FencedReadTwiceTest</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t FencedReadTwiceTest$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_UnfencedAcquireReleaseTest</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t UnfencedAcquireReleaseTest$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_UnfencedPublicationTest</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t UnfencedPublicationTest$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_FencedPublicationTest</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t FencedPublicationTest$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_UnsafeLocalDCL</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t UnsafeLocalDCL$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_UnsafeDCL</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t UnsafeDCL$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_Holder</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t Holder$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_SynchronizedCL</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t SynchronizedCL$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_SafeDCL</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t SafeDCL$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_FinalWrapper</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t FinalWrapper$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_SafeLocalDCL</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t SafeLocalDCL$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_ScalarReplacedVolatileBarrierTest</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t ScalarReplacedVolatileBarrierTest$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_PowerSCViolation</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t PowerSCViolation$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_ReadTwiceOverVolatileReadTest</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t ReadTwiceOverVolatileReadTest$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_DoubleVolatileTest</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t DoubleVolatileTest$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_ObservedVolatileBarrierTest</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t ObservedVolatileBarrierTest$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_VolatileIncrementAtomicityTest</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t VolatileIncrementAtomicityTest$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_UnobservedVolatileBarrierTest</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t UnobservedVolatileBarrierTest$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_VolatileIRIWTest</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t VolatileIRIWTest$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_LazySetTransitivityTest</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t LazySetTransitivityTest$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_DekkerTest</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t DekkerTest$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_RelaxedIRIWTest</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t RelaxedIRIWTest$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_VolatileAcquireReleaseTest</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t VolatileAcquireReleaseTest$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_ReadAfterReadTest</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t ReadAfterReadTest$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_ReadAfterVolatileReadTest</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t ReadAfterVolatileReadTest$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_OpaqueIRIWTest</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t OpaqueIRIWTest$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_StringBufferTest</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t StringBufferTest$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_BigDecimalString</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t BigDecimalString$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_StringBuilderTest</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t StringBuilderTest$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_StringBufferAppendTest</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t StringBufferAppendTest$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_BigIntegerStringLen</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t BigIntegerStringLen$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_BigDecimalStringLen</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t BigDecimalStringLen$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_BigIntegerString</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t BigIntegerString$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_ThreadLocalSharing</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t ThreadLocalSharing$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_ByteBufferIntAtomicityTest</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t ByteBufferIntAtomicityTest$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_DirectByteBufferIntAtomicityTest</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t DirectByteBufferIntAtomicityTest$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_UnsafeIntAtomicityTest</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t UnsafeIntAtomicityTest$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_CharBufferAtomicityTests</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t CharBufferAtomicityTests$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_DoubleBufferAtomicityTests</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t DoubleBufferAtomicityTests$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_ByteBufferAtomicityTests</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t ByteBufferAtomicityTests$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_FloatBufferAtomicityTests</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t FloatBufferAtomicityTests$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_LongBufferAtomicityTests</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t LongBufferAtomicityTests$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_ByteBufferViewsAtomicityTests</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t ByteBufferViewsAtomicityTests$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_ShortBufferAtomicityTests</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t ShortBufferAtomicityTests$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_DirectByteBufferAtomicityTests</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t DirectByteBufferAtomicityTests$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_IntBufferAtomicityTests</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t IntBufferAtomicityTests$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_DirectByteBufferViewsAtomicityTests</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t DirectByteBufferViewsAtomicityTests$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_LongAtomicityTest</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t LongAtomicityTest$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_VolatileFloatAtomicityTest</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t VolatileFloatAtomicityTest$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_FloatAtomicityTest</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t FloatAtomicityTest$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_ByteAtomicityTest</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t ByteAtomicityTest$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_CharAtomicityTest</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t CharAtomicityTest$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_VolatileDoubleAtomicityTest</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t VolatileDoubleAtomicityTest$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_DoubleAtomicityTest</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t DoubleAtomicityTest$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_IntAtomicityTest</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t IntAtomicityTest$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_ShortAtomicityTest</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t ShortAtomicityTest$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_VolatileByteAtomicityTest</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t VolatileByteAtomicityTest$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_VolatileIntAtomicityTest</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t VolatileIntAtomicityTest$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_VolatileLongAtomicityTest</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t VolatileLongAtomicityTest$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_VolatileShortAtomicityTest</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t VolatileShortAtomicityTest$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_VolatileCharAtomicityTest</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t VolatileCharAtomicityTest$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_LongAtomicityTest</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t LongAtomicityTest$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_VolatileFloatAtomicityTest</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t VolatileFloatAtomicityTest$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_FloatAtomicityTest</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t FloatAtomicityTest$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_ByteAtomicityTest</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t ByteAtomicityTest$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_CharAtomicityTest</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t CharAtomicityTest$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_VolatileDoubleAtomicityTest</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t VolatileDoubleAtomicityTest$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_DoubleAtomicityTest</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t DoubleAtomicityTest$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_IntAtomicityTest</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t IntAtomicityTest$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_ShortAtomicityTest</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t ShortAtomicityTest$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_VolatileByteAtomicityTest</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t VolatileByteAtomicityTest$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_VolatileIntAtomicityTest</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t VolatileIntAtomicityTest$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_VolatileLongAtomicityTest</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t VolatileLongAtomicityTest$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_VolatileShortAtomicityTest</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t VolatileShortAtomicityTest$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_VolatileCharAtomicityTest</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t VolatileCharAtomicityTest$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_TimeUnitSleepTest</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t TimeUnitSleepTest$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_VolatileBusyLoopTest</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t VolatileBusyLoopTest$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_CurrentThreadIsInterruptedMethodTest</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t CurrentThreadIsInterruptedMethodTest$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_WeakReferenceTest</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t WeakReferenceTest$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_ThreadInterruptedTest</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t ThreadInterruptedTest$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_PlainBusyLoopTest</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t PlainBusyLoopTest$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_ReentrantLockNonInterruptiblyTest</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t ReentrantLockNonInterruptiblyTest$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_CurrentThreadIsInterruptedTest</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t CurrentThreadIsInterruptedTest$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_ObjectWaitInfiniteTest</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t ObjectWaitInfiniteTest$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_ThreadInterruptedMethodTest</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t ThreadInterruptedMethodTest$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_ThreadSleepTest</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t ThreadSleepTest$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_UnsafeBusyLoopTest</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t UnsafeBusyLoopTest$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_CurrentThreadIsInterruptedBreakTest</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t CurrentThreadIsInterruptedBreakTest$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_ThreadInterruptedBreakTest</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t ThreadInterruptedBreakTest$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_ReentrantLockInterruptiblyTest</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t ReentrantLockInterruptiblyTest$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_ObjectWaitTimedTest</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t ObjectWaitTimedTest$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_AtomicBooleanPairwiseTests</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t AtomicBooleanPairwiseTests$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_AtomicBooleanInitialValueTest</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t AtomicBooleanInitialValueTest$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_AtomicIntegerArrayPairwiseTests</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t AtomicIntegerArrayPairwiseTests$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_AtomicIntegerInitialValueTest</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t AtomicIntegerInitialValueTest$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_AtomicIntegerArrayInitialValueTest</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t AtomicIntegerArrayInitialValueTest$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_AtomicIntegerPairwiseTests</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t AtomicIntegerPairwiseTests$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_AtomicIntegerArrayInterleaveTest</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t AtomicIntegerArrayInterleaveTest$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_AtomicIntegerFieldUpdaterPairwiseTests</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t AtomicIntegerFieldUpdaterPairwiseTests$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_AtomicLongArrayInterleaveTest</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t AtomicLongArrayInterleaveTest$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_AtomicLongArrayInitialValueTest</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t AtomicLongArrayInitialValueTest$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_AtomicLongPairwiseTests</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t AtomicLongPairwiseTests$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_AtomicLongFieldUpdaterPairwiseTests</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t AtomicLongFieldUpdaterPairwiseTests$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_AtomicLongInitialValueTest</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t AtomicLongInitialValueTest$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_AtomicLongArrayPairwiseTests</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t AtomicLongArrayPairwiseTests$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_ByteBufferInterleaveTest</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t ByteBufferInterleaveTest$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_DoubleBufferInterleaveTest</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t DoubleBufferInterleaveTest$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_LongBufferInterleaveTest</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t LongBufferInterleaveTest$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_FloatBufferInterleaveTest</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t FloatBufferInterleaveTest$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_CharBufferInterleaveTest</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t CharBufferInterleaveTest$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_IntBufferInterleaveTest</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t IntBufferInterleaveTest$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_DirectByteBufferInterleaveTest</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t DirectByteBufferInterleaveTest$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_ShortBufferInterleaveTest</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t ShortBufferInterleaveTest$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_ArrayInterleaveTest</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t ArrayInterleaveTest$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_UnsafeIntTearingTest</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t UnsafeIntTearingTest$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_UnsafeArrayInterleaveTest</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t UnsafeArrayInterleaveTest$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_ThreadPoolExecutorSizesTest</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t ThreadPoolExecutorSizesTest$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_ThreadPoolExecutorKeepAliveTest</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t ThreadPoolExecutorKeepAliveTest$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_UnsafeAddLong1</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t UnsafeAddLong1$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_UnsafeReadTwiceOverVolatileReadTest</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t UnsafeReadTwiceOverVolatileReadTest$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_UnsafePutOrderedTwice</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t UnsafePutOrderedTwice$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_UnsafeAddLong42</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t UnsafeAddLong42$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_UnsafePublication</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t UnsafePublication$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_Sevcik_01_Redundant_WAR_Elimination</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t Sevcik_01_Redundant_WAR_Elimination$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_Sevcik_03_RoachMotel</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t Sevcik_03_RoachMotel$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_Sevcik_02_Redundant_RAR_Elimination</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t Sevcik_02_Redundant_RAR_Elimination$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_Sevcik_04_IrrelevantRead</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t Sevcik_04_IrrelevantRead$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_Sevcik_05_IllegalTransform</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t Sevcik_05_IllegalTransform$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_SampleTest</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t SampleTest$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_BoundedSingleTest</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t BoundedSingleTest$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_UnboundedSingleTest</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t UnboundedSingleTest$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_StringBoundedTest</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t StringBoundedTest$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_StringUnboundedTest</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t StringUnboundedTest$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_IntUnboundedTest</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t IntUnboundedTest$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_IntBoundedTest</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t IntBoundedTest$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_BoundedSingleTest</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t BoundedSingleTest$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_UnboundedDoubleTest</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t UnboundedDoubleTest$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_BoundedDoubleTest</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t BoundedDoubleTest$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_UnboundedSingleTest</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t UnboundedSingleTest$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_HashMapFailureTest</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t HashMapFailureTest$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_DekkerRelaxation2Test</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t DekkerRelaxation2Test$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_DekkerTest</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t DekkerTest$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_DekkerRelaxation1Test</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t DekkerRelaxation1Test$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_FutureTaskSetTest</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t FutureTaskSetTest$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
	<test>
		<testCaseName>jcstress_ThreadNames</testCaseName>
		<command>$(JAVA_COMMAND) $(JVM_OPTIONS) -jar $(Q)$(LIB_DIR)$(D)jcstress-latest.jar$(Q) -jvmArgs $(Q)$(JVM_OPTIONS) -t ThreadNames$(Q); \
		$(TEST_STATUS)</command>
		<levels>
			<level>dev</level>
		</levels>
		<groups>
			<group>system</group>
		</groups>
	</test>
</playlist>